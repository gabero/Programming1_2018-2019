String rightVal, leftVal, displayValue;
char opValue;
float result;
boolean firstNum, dec;



Button[] numBtns = new Button[10];
Button[] opBtns = new Button[12];


void setup() {
  size(670, 900);
  numBtns[0] = new Button(170, 818, 280, 80, 100, color(45, 45, 45)).asNumber(0);
  numBtns[1] = new Button(90, 700, 120, 80, 100, color(45, 45, 45)).asNumber(1);
  numBtns[2] = new Button(250, 700, 120, 80, 100, color(196, 196, 196)).asNumber(2);
  numBtns[3] = new Button(410, 700, 120, 80, 100, color(196, 196, 196)).asNumber(3);
  numBtns[4] = new Button(90, 585, 120, 80, 100, color(196, 196, 196)).asNumber(4);
  numBtns[5] = new Button(250, 585, 120, 80, 100, color(196, 196, 196)).asNumber(5);
  numBtns[6] = new Button(410, 585, 120, 80, 100, color(196, 196, 196)).asNumber(6);
  numBtns[7] = new Button(90, 470, 120, 80, 100, color(196, 196, 196)).asNumber(7);
  numBtns[8] = new Button(250, 470, 120, 80, 100, color(196, 196, 196)).asNumber(8);
  numBtns[9] = new Button(410, 470, 120, 80, 100, color(196, 196, 196)).asNumber(9);

  //fill(255, 153, 51);
  opBtns[0] = new Button(570, 250, 120, 80, 100, color(0)).asOperator ("÷");
  opBtns[1] = new Button(570, 760, 120, 200, 100, color(200, 200, 200)).asOperator ("=");
  opBtns[2] = new Button(570, 585, 120, 80, 100, color(255, 153, 51)).asOperator ("+");
  opBtns[3] = new Button(570, 470, 120, 80, 100, color(255, 153, 51)).asOperator ("-");
  opBtns[4] = new Button(570, 360, 120, 80, 100, color(255, 153, 51)).asOperator ("×");
  opBtns[5] = new Button(410, 818, 120, 80, 100, color(255, 153, 51)).asOperator (".");
  opBtns[6] = new Button(90, 250, 120, 80, 100, color(255, 153, 51)).asOperator ("C");
  opBtns[7] = new Button(250, 250, 120, 80, 100, color(255, 153, 51)).asOperator ("±");
  opBtns[8] = new Button(410, 250, 120, 80, 100, color(255, 153, 51)).asOperator ("DEL");
  opBtns[9] = new Button(90, 360, 120, 80, 100, color(255, 153, 51)).asOperator ("%");
  opBtns[10] = new Button(250, 360, 120, 80, 100, color(255, 153, 51)).asOperator ("X^2");
  opBtns[11] = new Button(410, 360, 120, 80, 100, color(255, 153, 51)).asOperator ("√");
  displayValue = "";
  leftVal = "";
  rightVal = "";
  opValue = ' ';
  result = 0.0;
  firstNum = true;
  dec = false;
}
void draw() {
  background (39, 45, 203);
  for (int i=0; i<numBtns.length; i++) {
    numBtns[i].display();
    numBtns[i].hover();
  }
  for (int i=0; i<opBtns.length; i++) {
    opBtns[i].display();
    opBtns[i].hover();
  }
  updateDisplay();
}

void updateDisplay() {
  rectMode (CENTER);
  fill(100, 151, 201);
  rect(345, 100, 500, 120);
  textSize(30);
  textAlign(RIGHT);
  fill(0);
  text(displayValue, 350, 120);
}


void mouseReleased() {
  for (int i=0; i<numBtns.length; i++) {
    if (numBtns[i].hov) {
      if (firstNum) {
        leftVal = leftVal + str(numBtns[i].v);
        displayValue = leftVal;
      } else {
        rightVal = rightVal + str(numBtns[i].v);
        displayValue = rightVal;
      }
    }
  }
  for (int i=0; i<opBtns.length; i++) {
    if (opBtns[i].hov) {
      if (opBtns[i].op == "+") {
        opValue = '+';
        firstNum = false;
        dec = false;
      } else if (opBtns[i].op == "-") {
        opValue = '-';
        firstNum = false;
        dec = false;
      } else if (opBtns[i].op == "÷") {
        opValue = '÷';
        firstNum = false;
        dec = false;
      } else if (opBtns[i].op == "×") {
        opValue = '×';
        firstNum = false;
        dec = false;
      } else if (opBtns[i].op == "=") {
        performCalc();
      } else if (opBtns[i].op == "C") {
        reset();
      } else if (opBtns[i].op == ".") {
        if (!dec) {
          if (firstNum) {
            leftVal += opBtns[i].op;
            displayValue = leftVal;
            dec = true;
          } else {
            rightVal += opBtns[i].op;
            displayValue = rightVal;
            dec = true;
          }
        }
      } else if (opBtns[i].op == "±") {
        if (firstNum) {
          leftVal = str (float(leftVal)* -1);
          displayValue = leftVal;
        } else {
          rightVal = str(float(rightVal)* -1);
          displayValue = rightVal;
        }
      } else if (opBtns[i].op == "X^2") {
        if (firstNum) {
          leftVal =  str(sq(float(leftVal)));
          displayValue = leftVal;
        } else {
          rightVal = str(sq(float (rightVal)));
          displayValue = rightVal;
        }
      } else if (opBtns[i].op == "√") {
        if (firstNum) {
          leftVal = str(sqrt(float(leftVal)));
          displayValue = leftVal;
        } else {
          rightVal = str(sqrt(float(rightVal)));
          displayValue = rightVal;
        }
      } else if (opBtns[i].op == "%") {
        if (firstNum) {
          leftVal = str(float(leftVal)*0.01);
          displayValue = leftVal;
        } else {
          rightVal = str(float(rightVal)*0.01);
          displayValue = leftVal;
        }
      } else if (opBtns[i].op == "DEL") {
        if (firstNum) {
          if (leftVal.length()> 0) {
            leftVal = leftVal.substring(0, leftVal.length() -1);
            displayValue = leftVal;
          }
        } else {
          if (rightVal.length()> 0) {
            rightVal = rightVal.substring(0, rightVal.length() -1);
            displayValue = rightVal;
          }
        }
      }
    }
  }
}
void keyPressed() {
  if (key == '0') {
    handleKeyPress(true, "0");
  }
  if (key == '1') {
    handleKeyPress(true, "1");
  }
  if (key == '2') {
    handleKeyPress(true, "2");
  }
  if (key == '3') {
    handleKeyPress(true, "3");
  }
  if (key == '4') {
    handleKeyPress(true, "4");
  }
  if (key == '5') {
    handleKeyPress(true, "5");
  }
  if (key == '6') {
    handleKeyPress(true, "6");
  }
  if (key == '7') {
    handleKeyPress(true, "7");
  }
  if (key == '8') {
    handleKeyPress(true, "8");
  }
  if (key == '9') {
    handleKeyPress(true, "9");
  }
  if (key == '+') {
    handleKeyPress(false, "+");
  }
  if (key == '-') {
    handleKeyPress(false, "-");
  }
  if (key == '*') {
    handleKeyPress(false, "×");
  }
  if (key == '/') {
    handleKeyPress(false, "÷");
  }
  if (key == 'd') {
    handleKeyPress(false, "DEL");
  }
  if (key == ENTER) {
    handleKeyPress(false, "=");
  }
}

void handleKeyPress(boolean num, String val) {
  if (num) {
    if (firstNum) {
      leftVal += val;
      displayValue = leftVal;
    } else {
      rightVal += val;
      displayValue = rightVal;
    }
  } else {
    if (val == "+") {
      opValue = '+';
      firstNum = false;
      dec = false;
    } else if (val == "-") {
      opValue = '-';
      firstNum = false;
      dec = false;
    } else if (val == "×") {
      opValue = '*';
      firstNum = false;
      dec = false;
    } else if (val == "÷") {
      opValue = '÷';
      firstNum = false;
      dec = false;
    } else if (val == "=") {
      performCalc();
      opValue = '=';
      firstNum = false;
      dec = false;
    }
  }
}



void performCalc() {
  if (opValue == '+') {
    result = float (leftVal) +float (rightVal);
    displayValue = str(result);
    dec = false;
  } else if (opValue == '-') {
    result = float (leftVal) - float(rightVal);
    displayValue = str(result);
    dec = false;
  } else if (opValue == '×') {
    result = float (leftVal)*float(rightVal);
    displayValue = str(result);
    dec = false;
  } else if (opValue == '÷') {
    result = float (leftVal)/float(rightVal);
    displayValue = str(result);
    dec = false;
  }
  leftVal = displayValue;
  firstNum = true;
  dec = false;
}
void reset () {
  displayValue = "";
  leftVal = "";
  rightVal = "";
  opValue = ' ';
  result = 0.0;
  firstNum = true;
  dec = false;
}
